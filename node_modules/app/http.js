'use strict'

var Task = require('data.task')
var xhr = require('xhr')
var { curry, prop, compose, map, identity } = require('ramda')

var basic_request = curry((method, body, path) =>
  request(method, path, { json: body }))

var get = (path) => request('get', path, {})
var del = (path) => request('del', path, {})
var post = basic_request('post')
var put = basic_request('put')


var body_request = fn => req_type =>
  compose(map(compose(fn, prop('body'))), req_type)

var get_body = body_request(JSON.parse)(get)
var post_body = body_request(identity)(post)
var put_body = body_request(identity)(put)

function request (method, path, options) {
  return new Task(function (reject, resolve) {
    xhr[method](path, options, function (err, res, body) {
      err ? reject(err) : resolve(res)
    })
  })
}

module.exports = { get, post, del, request, get_body, post_body, put_body }



//
// var get = (path) => request('get', path, {})
//
// var request = curry((method, body, path) => request(method, path, { json: body }))
//
// var post = request('post')
// var put = request('put')
//
// var del = (path) => request('del', path, {})
//
//
//
// var body_request = compose(map(prop('body')))
//
// var get_body = compose(map(compose(JSON.parse, prop('body'))), get)
// var post_body = body_request(post)
// var put_body = body_request(put)
