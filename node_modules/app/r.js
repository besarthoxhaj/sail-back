import React from 'react'
const { ifElse, merge, compose, equals, type, of, map, objOf, range, length
  , zipWith }
    = require('ramda')
import { K, I, S } from 'sanctuary'

const { createElement } = React

const r = elem => props => children =>
  createElement(elem, props, add_index_as_key(children))

const is_component = y => (typeof y).match(/object|function/)

const index_component = ifElse(is_component, merge, K)

const ensure_array = ifElse(compose(equals('Array'), type), I, of)

const key_indices = compose(map(objOf('key')), range(0), length)

const add_index_as_key =
  compose(S(zipWith(index_component), key_indices), ensure_array)

export default r

